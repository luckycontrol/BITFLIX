{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TvPresenter.js","Routes/TV/index.js","Routes/TV/TvContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","StyledLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","moviesApi","HomeContainer","state","this","setState","data","results","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","TvPresenter","topRated","airingToday","show","name","first_air_date","TvContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_name","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","Tv","Search","Detail","globalStyles","createGlobalStyle","reset","App","GlobalStyles","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23ae07d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  text-align: center;\n  height: 50px;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst StyledLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// 라우터로 인해 컴포넌트가 교체되면 Header에 변화를 주어야 한다.\n// 탭 아래에 밑줄이 생기는 효과\n// 어떤 라우터로 이동하는지 알아야 하기에 withRouter를 사용해야 한다.\n// Router로 감싸진 컴포넌트는 match location history가 같이 들어온다.\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <StyledLink to=\"/\">영화</StyledLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <StyledLink to=\"/tv\">TV</StyledLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <StyledLink to=\"/search\">검색</StyledLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600px;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100v2;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => {\n  return (\n    <Container>\n      <Text color={color}>{text}</Text>\n    </Container>\n  );\n};\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => `${props.bgUrl}`});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating} / 10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n// Container로부터 받은 이벤트나 함수를 화면에 적용시키는 역할\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | BITFLIX</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"현재 개봉작\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c3c\"} text={error} />}\n        </Container>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"추후 개봉작\">\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c4c\"} text={error} />}\n        </Container>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {popular && popular.length > 0 && (\n            <Section title=\"인기작\">\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  isMovie={true}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c4c\"} text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"f02b39f36febafba0161b0cd7bb4e12f\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\n// Container의 역할 : Application에서 사용되는 함수, state, 이벤트 등을\n// 구현하고, Presenter에 전달\nexport default class extends React.Component {\n  // 클래스형 컴포넌트에서 state만들기\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  // constructor : 생성자\n  // 매개변수로 부모 컴포넌트의 props가 들어온다.\n  constructor(props) {\n    super(props);\n  }\n\n  // 컴포넌트가 부모 컴포넌트에 마운트 되었을 때 호출\n  // useEffect(() => {}, [])와 같다.\n  // useEffect에서 비동기처리와 다르게 componentDidMount에서의 비동기 처리는\n  // 앞에 async를 붙여주면 된다.\n  async componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n\n    try {\n      // data : { results: [{}, {}, {}...]}\n      // data 안에 있는 results에 들어있는 값을 nowPlaying 변수에 넣겠다.\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"영화 정보를 찾을 수 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  // 함수형 컴포넌트의 return에 해당한다.\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Section from \"../../Components/Section\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => {\n  return (\n    <Container>\n      <Helmet>\n        <title>Search : BITFLIX</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"검색할 영화나 TV프로그램을 입력하세요.\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        movieResults &&\n        movieResults.length > 0 && (\n          <Section title=\"영화\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )\n      )}\n      {tvResults &&\n        movieResults &&\n        tvResults.length === 0 &&\n        movieResults.length === 0 && (\n          <Message text=\"검색결과가 없습니다.\" color={\"#95a5a6\"} />\n        )}\n    </Container>\n  );\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  //submit\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  // update -> onChange에서 일어날 이벤트\n  updateTerm = (event) => {\n    const {\n      target: { value: searchTerm },\n    } = event;\n\n    this.setState({ searchTerm });\n  };\n\n  // search -> 검색어를 넣은 API 호출\n  // 이벤트가 일어났을 때 비동기로 호출\n  searchByTerm = async () => {\n    // 1. 검색어 가져오기\n    const { searchTerm } = this.state;\n\n    // 2. loading 설정하기\n    this.setState({ loading: true });\n\n    // 3. 실제 API 호출하기\n    // 데이터의 응답 형태 : { data : { results : [ {}. {}, {}, ... ] } }\n    try {\n      // moviesApi.search -> movieResults에 담기\n      // tvApi.search -> tvResults에 담기\n\n      //unpacking 기법 활용하기\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search();\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search();\n\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"검색하신 프로그램이 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  // 함수형 컴포넌트의 return에 해당한다.\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TvPresenter = ({ topRated, popular, airingToday, error, loading }) => {\n  return (\n    <>\n      <Helmet>\n        <title>TV Shows | BITFLIX</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && topRated.length > 0 && (\n            <Section title=\"최고순위\">\n              {topRated.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  isMovie={false}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c3c\"} text={error} />}\n        </Container>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {popular && popular.length > 0 && (\n            <Section title=\"인기작\">\n              {popular.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  isMovie={false}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c3c\"} text={error} />}\n        </Container>\n      )}\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {airingToday && airingToday.length > 0 && (\n            <Section title=\"오늘방영\">\n              {airingToday.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  isMovie={false}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color={\"#e74c3c\"} text={error} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default TvPresenter;\n","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;\n","import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true,\n    });\n\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"TV쇼 정보를 찾을 수 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  // 함수형 컴포넌트의 return에 해당한다.\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TvPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Message from \"../../Components/Message\";\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Ryanflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color={\"#e74c3c\"} text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Ryanflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? `${genre.name}`\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\n//\nexport default class extends React.Component {\n  // 영화 상세 페이지를 표현?\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    // id가지고오기, match.params\n    // 아이디가 안들어오면 Home으로 이동 -> history.push\n    // 사용자의 요청을 서버가 받고 재요청 하도록 하는 것을 redirect라고 한다.\n\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    // 올바르지 않은 id는..\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch (error) {\n      this.setState({\n        error: \"프로그램이 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n      });\n    }\n  }\n\n  // 함수형 컴포넌트의 return에 해당한다.\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../Routes/Home\";\nimport Search from \"../Routes/Search\";\nimport Tv from \"../Routes/TV\";\nimport Detail from \"../Routes/Detail\";\n\n// 오로지 라우터만 관리하는 컴포넌트\n\nexport default () => (\n  <Router>\n    <Header />\n\n    {/* Switch가 있어야 하나의 라우터만 타게 된다. */}\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={Tv} />\n      <Route path=\"/search\" exact component={Search} />\n      <Route path=\"/movie/:id\" exact component={Detail} />\n      <Route path=\"/show/:id\" exact component={Detail} />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px\n    }\n`;\n\nexport default globalStyles;\n","import Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}